version: '3.7'
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    build:
      context: .
      dockerfile: nginx.proxy.dockerfile
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:delegated
      - certs:/etc/nginx/certs:delegated
      - vhostd:/etc/nginx/vhost.d
      - html:/var/www/html
      - ./src:/var/www/html:delegated
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
    depends_on:
      - php
    networks:
      - laravel





  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy

    volumes:
      - certs:/etc/nginx/certs:rw
      - vhostd:/etc/nginx/vhost.d
      - html:/var/www/html
      - /var/run/docker.sock:/var/run/docker.sock:delegated
      
    depends_on:
      - nginx-proxy
    networks:
      - laravel




  # nginx:
  #   # image: nginx
  #   build:
  #     context: .
  #     dockerfile: nginx.dockerfile
  #   container_name: nginx
  #   restart: always
  #   expose:
  #     - "80"
  #   volumes:
  #     - ./src:/var/www/html:delegated
  #   environment:
  #     - VIRTUAL_HOST=mvdcreativo.tk,www.mvdcreativo.tk
  #     - LETSENCRYPT_HOST=mvdcreativo.tk,www.mvdcreativo.tk
  #     - LETSENCRYPT_EMAIL=mvdcreativo@gmail.com
  #   depends_on:
  #     - nginx-proxy
  #     - letsencrypt
  #   networks:
  #     - laravel

      

  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: php
    restart: always
    tty: true
    volumes:
      - ./src:/var/www/html:delegated
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    environment:
      - VIRTUAL_HOST=mvdcreativo.tk,www.mvdcreativo.tk
      - LETSENCRYPT_HOST=mvdcreativo.tk,www.mvdcreativo.tk
      - LETSENCRYPT_EMAIL=mvdcreativo@gmail.com
    ports:
      - 9000:80
    networks:
      - laravel

  # mysql:
  #   image: mysql:8.0
  #   container_name: mysql
  #   restart: always
  #   tty: true
  #   ports:
  #     - 3306:3306
  #   volumes:
  #     - ./mysql:/var/lib/mysql
  #   environment:
  #     MYSQL_DATABASE: ${DB_DATABASE}
  #     MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
  #     MYSQL_USER: ${DB_USER}
  #     MYSQL_PASSWORD: ${DB_PASSWORD}
  #     SERVICE_TAGS: dev
  #     SERVICE_NAME: mysql
  #   networks:
  #     - laravel

  # redis:
  #   image: redis:alpine
  #   container_name: redis
  #   restart: always
  #   ports:
  #     - 6379:6379
  #   networks:
  #     - laravel

  # npm:
  #   image: node:13.7
  #   container_name: npm
  #   volumes:
  #     - ./src:/var/www/html
  #   working_dir: /var/www/html
  #   entrypoint: [ 'npm' ]
  #   networks:
  #     - laravel

  # composer:
  #   build:
  #     context: .
  #     dockerfile: composer.dockerfile
  #   container_name: composer
  #   volumes:
  #     - ./src:/var/www/html
  #   working_dir: /var/www/html
  #   depends_on:
  #     - php
  #   user: laravel
  #   # entrypoint: [ 'composer', '--ignore-platform-reqs' ]
  #   entrypoint: [ 'composer' ]
  #   networks:
  #     - laravel

  # artisan:
  #   build:
  #     context: .
  #     dockerfile: php.dockerfile
  #   container_name: artisan
  #   volumes:
  #     - ./src:/var/www/html:delegated
  #   depends_on:
  #     - composer
  #   working_dir: /var/www/html
  #   user: laravel
  #   entrypoint: [ 'php', '/var/www/html/artisan' ]
  #   networks:
  #     - laravel
volumes: 
  certs:
  html:
  vhostd:

networks:
  laravel:
    driver: bridge

